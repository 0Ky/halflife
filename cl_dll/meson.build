hl_client_src = [
    'hud_spectator.cpp',
    '../game_shared/vgui_scrollbar2.cpp',
    '../game_shared/vgui_slider2.cpp',
    'vgui_SpectatorPanel.cpp',
    '../dlls/crossbow.cpp',
    '../dlls/crowbar.cpp',
    '../dlls/egon.cpp',
    'ev_hldm.cpp',
    '../dlls/gauss.cpp',
    '../dlls/handgrenade.cpp',
    'hl/hl_baseentity.cpp',
    'hl/hl_events.cpp',
    'hl/hl_objects.cpp',
    'hl/hl_weapons.cpp',
    '../dlls/wpn_shared/hl_wpn_glock.cpp',
    '../dlls/hornetgun.cpp',
    '../dlls/mp5.cpp',
    '../dlls/python.cpp',
    '../dlls/rpg.cpp',
    '../dlls/satchel.cpp',
    '../dlls/shotgun.cpp',
    '../dlls/squeakgrenade.cpp',
    '../dlls/tripmine.cpp',
    'ammo.cpp',
    'ammo_secondary.cpp',
    'ammohistory.cpp',
    'battery.cpp',
    'cdll_int.cpp',
    'com_weapons.cpp',
    'death.cpp',
    'demo.cpp',
    'entity.cpp',
    'ev_common.cpp',
    'events.cpp',
    'flashlight.cpp',
    'GameStudioModelRenderer.cpp',
    'geiger.cpp',
    'health.cpp',
    'hud.cpp',
    'hud_bench.cpp',
    'hud_benchtrace.cpp',
    'hud_msg.cpp',
    'hud_redraw.cpp',
    'hud_servers.cpp',
    'hud_update.cpp',
    'in_camera.cpp',
    'input.cpp',
    'inputw32.cpp',
    '../public/interface.cpp',
    'interpolation.cpp',
    'menu.cpp',
    'message.cpp',
    '../common/parsemsg.cpp',
    '../pm_shared/pm_debug.c',
    '../pm_shared/pm_math.c',
    '../pm_shared/pm_shared.c',
    'saytext.cpp',
    'status_icons.cpp',
    'statusbar.cpp',
    'studio_util.cpp',
    'StudioModelRenderer.cpp',
    'text_message.cpp',
    'train.cpp',
    'tri.cpp',
    'util.cpp',
    '../game_shared/vgui_checkbutton2.cpp',
    'vgui_ClassMenu.cpp',
    'vgui_ControlConfigPanel.cpp',
    'vgui_CustomObjects.cpp',
    '../game_shared/vgui_grid.cpp',
    '../game_shared/vgui_helpers.cpp',
    'vgui_int.cpp',
    '../game_shared/vgui_listbox.cpp',
    '../game_shared/vgui_loadtga.cpp',
    'vgui_MOTDWindow.cpp',
    'vgui_SchemeManager.cpp',
    'vgui_ScorePanel.cpp',
    'vgui_ServerBrowser.cpp',
    'vgui_TeamFortressViewport.cpp',
    'vgui_TeamMenu.cpp',
    'view.cpp',
    '../game_shared/voice_banmgr.cpp',
    'voice_status.cpp',
    'ammo.h',
    'ammohistory.h',
    'camera.h',
    'cl_dll.h',
    'cl_util.h',
    'com_weapons.h',
    'demo.h',
    'ev_hldm.h',
    'eventscripts.h',
    'GameStudioModelRenderer.h',
    'health.h',
    'hud.h',
    'hud_servers.h',
    'hud_servers_priv.h',
    'hud_spectator.h',
    '../public/cl_dll/IGameClientExports.h',
    'in_defs.h',
    'interpolation.h',
    'kbutton.h',
    '../common/parsemsg.h',
    '../pm_shared/pm_debug.h',
    '../pm_shared/pm_defs.h',
    '../pm_shared/pm_info.h',
    '../pm_shared/pm_materials.h',
    '../pm_shared/pm_movevars.h',
    '../pm_shared/pm_shared.h',
    'StudioModelRenderer.h',
    'tri.h',
    'util_vector.h',
    'vgui_ControlConfigPanel.h',
    'vgui_int.h',
    'vgui_SchemeManager.h',
    'vgui_ScorePanel.h',
    '../game_shared/vgui_scrollbar2.h',
    'vgui_ServerBrowser.h',
    '../game_shared/vgui_slider2.h',
    'vgui_SpectatorPanel.h',
    'view.h',
    '../game_shared/voice_banmgr.h',
    '../game_shared/voice_status.h',
    'wrect.h',
]

hl_client_defines = [
    '-DVOXEL',
    '-DQUAKE2',
    '-DVALVE_DLL',
    '-DCLIENT_DLL',
    '-DCLIENT_WEAPONS',
    '-DHL_DLL',
]

hl_client_includes = include_directories([
    '.',
    '../dlls',
    '../pm_shared',
    '../game_shared',
    '../engine',
    '../utils/vgui/include',
])

hl_client_deps = [
    vgui2_dep,
    vgui_dep,
    SDL2_dep,
    ws2_32_dep,
]

install_dir = '/valve/cl_dlls' 
target_name = 'client'
hl_client_lib = shared_library(target_name, hl_client_src,
    dependencies        : hl_client_deps,
    cpp_args            : hl_client_defines,
    c_args              : hl_client_defines,
    include_directories : [ hl_client_includes, goldsrc_includes ],
    install             : true,
    install_dir         : output_dir + install_dir,
)

hl_client_dep = declare_dependency(
    link_with           : [ hl_client_lib ],
)

# this doesn't run when we need it to; the vcxproj won't be generated yet........ thought REGEN might run it but nah
# cmd = join_paths(meson.current_build_dir(), '..\..\devtools\inject_post_build.bat')
# cs = run_command(cmd, [target_name, meson.current_build_dir(), install_dir], check: false)
# #message(cs.stdout())

cmd = join_paths(meson.current_build_dir(), '..\..\devtools\meson_set_outdir.bat')
cs = run_command(cmd, [target_name, meson.current_build_dir(), install_dir], check: false)
#message(cs.stdout())
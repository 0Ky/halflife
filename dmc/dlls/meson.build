dmc_server_src = [
    'quake_gun.cpp',
    'quake_weapons_all.cpp',
    'animating.cpp',
    'animation.cpp',
    'bmodels.cpp',
    'buttons.cpp',
    'cbase.cpp',
    'client.cpp',
    'combat.cpp',
    'doors.cpp',
    'effects.cpp',
    'explode.cpp',
    'func_break.cpp',
    'func_tank.cpp',
    'game.cpp',
    'gamerules.cpp',
    'globals.cpp',
    'h_ai.cpp',
    'h_export.cpp',
    'lights.cpp',
    'maprules.cpp',
    'monsters.cpp',
    'monsterstate.cpp',
    'multiplay_gamerules.cpp',
    'nodes.cpp',
    'observer.cpp',
    'pathcorner.cpp',
    'plane.cpp',
    'plats.cpp',
    'player.cpp',
    '../pm_shared/pm_debug.c',
    '../pm_shared/pm_math.c',
    '../pm_shared/pm_shared.c',
    'quake_items.cpp',
    'quake_nail.cpp',
    'quake_player.cpp',
    'quake_rocket.cpp',
    'schedule.cpp',
    'singleplay_gamerules.cpp',
    'skill.cpp',
    'sound.cpp',
    'spectator.cpp',
    'subs.cpp',
    'teamplay_gamerules.cpp',
    'threewave_gamerules.cpp',
    'triggers.cpp',
    'util.cpp',
    '../../game_shared/voice_gamemgr.cpp',
    'weapons.cpp',
    'world.cpp',
    'activity.h',
    'activitymap.h',
    'animation.h',
    'basemonster.h',
    'cbase.h',
    'cdll_dll.h',
    'client.h',
    'decals.h',
    'defaultai.h',
    'doors.h',
    'effects.h',
    'enginecallback.h',
    'explode.h',
    'extdll.h',
    'func_break.h',
    'gamerules.h',
    'items.h',
    'monsterevent.h',
    'monsters.h',
    'nodes.h',
    'plane.h',
    'player.h',
    '../pm_shared/pm_debug.h',
    '../pm_shared/pm_defs.h',
    '../pm_shared/pm_info.h',
    '../pm_shared/pm_materials.h',
    '../pm_shared/pm_movevars.h',
    '../pm_shared/pm_shared.h',
    'quake_gun.h',
    'saverestore.h',
    'schedule.h',
    'scripted.h',
    'scriptevent.h',
    'skill.h',
    'soundent.h',
    'spectator.h',
    'teamplay_gamerules.h',
    'threewave_gamerules.h',
    'trains.h',
    'util.h',
    'vector.h',
    '../../game_shared/voice_gamemgr.h',
    'weapons.h',
]


dmc_server_defines = [
    '-DVOXEL',
    '-DQUAKE2',
    '-DQUIVER',
    '-DVALVE_DLL',
]

dmc_server_includes = include_directories([
	'.',
	'../../game_shared',
	'../dlls',
	'../../engine',
	'../../common',
	'../pm_shared',
	'../',
	'../../public',
])

install_dir = '/dmc/dlls' 
target_name = 'dmc'
dmc_server_lib = shared_library(target_name, dmc_server_src,
    cpp_args            : dmc_server_defines,
    c_args              : dmc_server_defines,
    include_directories : [ dmc_server_includes ],
    vs_module_defs      : 'hl.def',
    install             : true,
    install_dir         : output_dir + install_dir,
)

dmc_server_dep = declare_dependency(
    link_with           : [ dmc_server_lib ],
)

cmd = join_paths(meson.current_build_dir(), '..\..\..\devtools\meson_set_outdir.bat')
cs = run_command(cmd, [target_name, meson.current_build_dir(), install_dir], check: false)
#message(cs.stdout())
dmc_client_src = [
    'CTF_FlagStatus.cpp',
    'CTF_HudMessage.cpp',
    'DMC_Teleporters.cpp',
    'ev_hldm.cpp',
    'quake/quake_baseentity.cpp',
    'quake/quake_events.cpp',
    '../dlls/quake_gun.cpp',
    'quake/quake_objects.cpp',
    'quake/quake_weapons.cpp',
    '../dlls/quake_weapons_all.cpp',
    'studio_util.cpp',
    'vgui_SpectatorPanel.cpp',
    'ammo.cpp',
    'ammo_secondary.cpp',
    'ammohistory.cpp',
    'battery.cpp',
    'cdll_int.cpp',
    'com_weapons.cpp',
    'death.cpp',
    'demo.cpp',
    'entity.cpp',
    'ev_common.cpp',
    'events.cpp',
    'GameStudioModelRenderer.cpp',
    'geiger.cpp',
    'health.cpp',
    'hud.cpp',
    'hud_msg.cpp',
    'hud_redraw.cpp',
    'hud_servers.cpp',
    'hud_spectator.cpp',
    'hud_update.cpp',
    'in_camera.cpp',
    'input.cpp',
    'inputw32.cpp',
    '../../public/interface.cpp',
    'menu.cpp',
    'message.cpp',
    '../../common/parsemsg.cpp',
    '../pm_shared/pm_debug.c',
    '../pm_shared/pm_math.c',
    '../pm_shared/pm_shared.c',
    'saytext.cpp',
    #'scoreboard.cpp', <-- tagged as excluded from build in old .dsp
    'status_icons.cpp',
    'statusbar.cpp',
    'StudioModelRenderer.cpp',
    'text_message.cpp',
    'train.cpp',
    'tri.cpp',
    'util.cpp',
    '../../game_shared/vgui_checkbutton2.cpp',
    '../../game_shared/vgui_grid.cpp',
    '../../game_shared/vgui_helpers.cpp',
    'vgui_int.cpp',
    '../../game_shared/vgui_listbox.cpp',
    '../../game_shared/vgui_loadtga.cpp',
    'vgui_ScorePanel.cpp',
    '../../game_shared/vgui_scrollbar2.cpp',
    'vgui_ServerBrowser.cpp',
    '../../game_shared/vgui_slider2.cpp',
    'vgui_viewport.cpp',
    'view.cpp',
    '../../game_shared/voice_banmgr.cpp',
    'voice_status.cpp',
    'ammo.h',
    'ammohistory.h',
    'camera.h',
    'cl_dll.h',
    'cl_util.h',
    'com_weapons.h',
    'demo.h',
    'DMC_BSPFile.h',
    'DMC_Teleporters.h',
    'ev_hldm.h',
    'eventscripts.h',
    'GameStudioModelRenderer.h',
    'health.h',
    'hud.h',
    'hud_iface.h',
    'hud_servers.h',
    'hud_servers_priv.h',
    'hud_spectator.h',
    'in_defs.h',
    'kbutton.h',
    '../../common/parsemsg.h',
    '../pm_shared/pm_debug.h',
    '../pm_shared/pm_defs.h',
    '../pm_shared/pm_info.h',
    '../pm_shared/pm_materials.h',
    '../pm_shared/pm_movevars.h',
    '../pm_shared/pm_shared.h',
    '../dlls/quake_gun.h',
    'StudioModelRenderer.h',
    '../dlls/util.h',
    'util_vector.h',
    '../../game_shared/vgui_checkbutton2.h',
    'vgui_ControlConfigPanel.h',
    '../../game_shared/vgui_grid.h',
    '../../game_shared/vgui_helpers.h',
    'vgui_int.h',
    '../../game_shared/vgui_listbox.h',
    '../../game_shared/vgui_loadtga.h',
    'vgui_SchemeManager.h',
    'vgui_ScorePanel.h',
    'vgui_ServerBrowser.h',
    'vgui_SpectatorPanel.h',
    'vgui_viewport.h',
    'view.h',
    'voice_status.h',
    'wrect.h',
    'vgui_CustomObjects.cpp',
    'vgui_MOTDWindow.cpp',
    'vgui_SchemeManager.cpp',
]

dmc_client_defines = [
    '-DVOXEL',
    '-DQUAKE2',
    '-DVALVE_DLL',
    '-DCLIENT_DLL',
 	'-DDMC_BUILD',
]

dmc_client_includes = include_directories([
	'../../public',
	'../dlls',
	'../../engine',
	'../../common',
	'../pm_shared',
	'../../utils/vgui/include',
	'.',
	'../../game_shared',
	'../../external',
])

dmc_client_deps = [
    vgui2_dep,
    vgui_dep,
    SDL2_dep,
    ws2_32_dep,
	vgui_controls_dep,
	game_controls_dep,
	steam_api_dep,
]

install_dir = '/dmc/cl_dlls' 
target_name = 'client'
dmc_client_lib = shared_library(target_name, dmc_client_src,
    dependencies        : dmc_client_deps,
    cpp_args            : dmc_client_defines,
    c_args              : dmc_client_defines,
    include_directories : [ dmc_client_includes ],
    install             : true,
    install_dir         : output_dir + install_dir,
)

dmc_client_dep = declare_dependency(
    link_with           : [ dmc_client_lib ],
)

cmd = join_paths(meson.current_build_dir(), '..\..\..\devtools\meson_set_outdir.bat')
cs = run_command(cmd, [target_name, meson.current_build_dir(), install_dir], check: false)
#message(cs.stdout())